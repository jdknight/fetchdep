[tox]
envlist =
    # linters
    pylint
    ruff
    # unit tests
    py{37,38,39,310,311,312,313}
    pypy3

[testenv]
commands =
    {envpython} -m tests {posargs}
deps =
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK=1
    PIP_NO_PYTHON_VERSION_WARNING=1
    PYTHONDONTWRITEBYTECODE=1
    TOX_INI_DIR={toxinidir}
usedevelop =
    true

# ######################################################################
# unit testing for extract checks which require external tools
# ######################################################################

[testenv:extract-tests]
commands =
    {envpython} -m tests --test-dir extract-tests {posargs}
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}
passenv =
    *

[testenv:py27-extract-tests]
commands =
    {envpython} -m tests --test-dir extract-tests {posargs}
deps =
    {[testenv:extract-tests]deps}
setenv =
    {[testenv:extract-tests]setenv}
passenv =
    *

[testenv:py34-extract-tests]
commands =
    {envpython} -m tests --test-dir extract-tests {posargs}
deps =
    {[testenv:extract-tests]deps}
setenv =
    {[testenv:extract-tests]setenv}
passenv =
    *

[testenv:py35-extract-tests]
commands =
    {envpython} -m tests --test-dir extract-tests {posargs}
deps =
    {[testenv:extract-tests]deps}
setenv =
    {[testenv:extract-tests]setenv}
passenv =
    *

[testenv:py36-extract-tests]
commands =
    {envpython} -m tests --test-dir extract-tests {posargs}
deps =
    {[testenv:extract-tests]deps}
setenv =
    {[testenv:extract-tests]setenv}
passenv =
    *

[testenv:py37-extract-tests]
commands =
    {envpython} -m tests --test-dir extract-tests {posargs}
deps =
    {[testenv:extract-tests]deps}
setenv =
    {[testenv:extract-tests]setenv}
passenv =
    *

[testenv:{py38-,py39-,py310-,py311-,py312-,py313-}extract-tests]
commands =
    {envpython} -m tests --test-dir extract-tests {posargs}
deps =
    {[testenv:extract-tests]deps}
setenv =
    {[testenv:extract-tests]setenv}
passenv =
    *

# ######################################################################
# tests non-editable installs, to ensure interpreters package correctly
# ######################################################################

[testenv:py27-release]
usedevelop =
    false

[testenv:py34-release]
usedevelop =
    false

[testenv:py35-release]
usedevelop =
    false

[testenv:py36-release]
usedevelop =
    false

[testenv:py37-release]
usedevelop =
    false

[testenv:{py38-,py39-,py310-,py311-,py312-,py313-}release]
usedevelop =
    false

# ######################################################################
# mainline testing
# ######################################################################

[testenv:py27-mainline]
commands =
    {envpython} -m fetchdep {posargs}
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements-test.txt
setenv =
    {[testenv]setenv}
    PYTHONUNBUFFERED=1
passenv =
    *

[testenv:{py35-,py36-,py37-,py38-,py39-,py310-,py311-,py312-,py313-}mainline]
commands =
    {envpython} -m fetchdep {posargs}
deps =
    {[testenv]deps}
    -r{toxinidir}/requirements-test.txt
setenv =
    {[testenv]setenv}
    PYTHONUNBUFFERED=1
passenv =
    *

# ######################################################################
# linters
# ######################################################################

[testenv:pylint]
deps =
    {[testenv]deps}
    pylint: pylint==3.3.7
commands =
    pylint \
    fetchdep \
    tests

[testenv:ruff]
deps =
    {[testenv]deps}
    ruff: ruff==0.12.0
setenv =
    {[testenv]setenv}
    RUFF_CACHE_DIR={toxworkdir}/.ruff_cache
commands =
    ruff \
    check \
    fetchdep \
    tests
